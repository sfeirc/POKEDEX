# Nom du workflow
name: "Déploiement auto suite à un push"

# Déclencheur 
on:  
  push: 
    branches: 
      - main

# -----------------------------------------------------

jobs:
  deploy:
    name: "Déploiement sur le serveur"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du code
        uses: actions/checkout@v2

      - name: Configuration SSH
        env: 
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: |
          # Création du dossier SSH
          mkdir -p ~/.ssh
          
          # Écriture de la clé privée
          echo "$SSH_KEY" > ~/.ssh/id_rsa.key
          chmod 600 ~/.ssh/id_rsa.key
          
          # Configuration SSH
          cat >>~/.ssh/config <<END
          Host serveurProd
            HostName $SSH_HOST
            User $SSH_USER
            Port $SSH_PORT
            IdentityFile ~/.ssh/id_rsa.key
            StrictHostKeyChecking no
            LogLevel DEBUG3
          END

      - name: Test de connexion SSH
        run: |
          ssh -v serveurProd 'echo "Test de connexion réussi"'

      - name: Déploiement
        run: |
          # Synchronisation des fichiers
          rsync -avvz --delete \
            --exclude '.git*' \
            --exclude 'node_modules' \
            --timeout=60 \
            -e "ssh -p ${{ secrets.SSH_PORT }}" \
            ./ serveurProd:/var/www/pokedex/ || {
              echo "Erreur lors de la synchronisation rsync"
              exit 1
            }

          # Redémarrage des services Docker
          ssh serveurProd '
            cd /var/www/pokedex && \
            docker-compose down && \
            docker-compose up -d --build
          ' || {
            echo "Erreur lors du redémarrage des services Docker"
            exit 1
          }
